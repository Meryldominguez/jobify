{"version":3,"sources":["api.js","hooks/useAuth.js","hooks/useFetch.js","context/UserContext.js","Nav.js","components/AlertContainer.js","context/AlertContext.js","forms/SearchForm.js","components/Spinner.js","components/Companies.js","components/Job.js","components/Company.js","components/Joblist.js","forms/ProfileForm.js","routes/LoggedInRoutes.js","forms/LoginForm.js","forms/SignupForm.js","routes/AnonRoutes.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","process","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","axios","error","message","response","Array","isArray","handle","this","request","res","company","id","job","queryString","companies","jobs","formData","username","window","localStorage","password","jobId","useAuth","useState","user","setUser","useEffect","a","Signup","resp","setItem","Login","log","clear","open","useFetchJobs","setJobs","getJobs","load","UserContext","React","createContext","Nav","logout","useContext","isLoading","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","className","onClick","AlertContainer","alerts","setAlerts","timer","setTimeout","oneLess","slice","clearTimeout","map","Alert","variant","msg","uuid","AlertContext","SearchForm","search","name","setFormData","handleSubmit","evt","preventDefault","querystring","stringify","Form","onSubmit","Col","FormGroup","InputGroup","FormControl","placeholder","aria-label","aria-describedby","value","onChange","target","Append","Button","LoadingSpinner","Spinner","animation","role","Companies","query","setQuery","setIsLoading","setCompanies","getCompanies","useFetchCompanies","loading","col","q","ListGroup","c","Item","Card","Body","Title","Badge","Image","src","logoUrl","Text","description","length","Job","title","companyHandle","companyName","salary","equity","withApplyButton","apply","profile","handleApplication","e","includes","Subtitle","Row","md","applications","size","block","disabled","Company","useParams","setCompany","getCompany","useFetchCompany","xs","items","ListGroupItem","JobList","applicationPossible","resetJobs","m","l","reload","ProfileForm","authProfile","updateProfile","setProfile","dirtyForm","setDirtyForm","email","firstName","lastName","handleChange","Group","controlId","Control","required","type","LoggedInRoutes","exact","path","Jumbotron","component","LoginForm","login","history","useHistory","push","SignupForm","signup","initialState","AnonRoutes","Routes","App","getProfile","patchProfile","jobID","useGetUserProfile","undefined","Provider","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03950ac6.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    \n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /** Get details on a job by ID */\n\n  static async getJob(id) {\n    let res = await this.request(`jobs/${id}`);\n    return res.job;\n  }\n\n\n  //Grouping API routes\n\n  /** Get all Companies. Searching can be accomplished by query string*/\n  static async getCompanies(queryString=\"\") {\n    let res = await this.request(`companies${queryString}`);\n    return res.companies;\n  }\n\n  /** Get all Jobs */\n  static async getJobs() {\n    let res = await this.request(`jobs/`);\n    return res.jobs;\n  }\n\n  /** User Login */\n  static async Login(formData) {\n    let res = await this.request(`auth/token`,formData,\"post\");\n    res.username=formData.username\n    return res;\n  }\n\n  /** User register */\n  static async Signup(formData) {\n    let res = await this.request(`auth/register`,formData,\"post\");\n    return res;\n  }\n  /** User profile load */\n  static async getProfile(username) {\n    JoblyApi.token = window.localStorage.token\n    let res = await this.request(`users/${username}`);\n    return res;\n  }\n  /** User profile edit */\n  static async patchProfile(username,{password,...data}) {\n    JoblyApi.token = window.localStorage.token\n    let res = await this.request(`users/${username}`,data, \"patch\");\n    return res;\n  }\n  /** User apply to jobs */\n  static async apply(username,jobId) {\n    JoblyApi.token = window.localStorage.token\n    let res = await this.request(`users/${username}/jobs/${jobId}`,{},\"post\");\n    return res;\n  }\n\n}\n\n\n// for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//     \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//     \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\nexport default JoblyApi","import { useEffect, useState } from \"react\"\nimport JoblyApi from \"../api\"\n\nconst useAuth = () => {\n    const [user, setUser] = useState()\n    \n    useEffect(()=>{\n        if (window.localStorage.username) {\n            setUser(window.localStorage)\n            JoblyApi.token = window.localStorage.token\n            return\n        }\n        setUser()\n    },[user])\n\n    const signup = async (formData)=>{\n        const resp = await JoblyApi.Signup(formData)\n        if (!resp.error){\n            window.localStorage.setItem(\"username\",resp.username)\n            window.localStorage.setItem(\"token\",resp.token)\n        }\n        return resp.error\n    }\n    \n    const login = async ({username,password})=>{\n        const resp = await JoblyApi.Login({username, password})\n        console.log(resp)\n        if (!resp.error){\n            JoblyApi.token = resp.token\n            window.localStorage.setItem(\"username\",resp.username)\n            window.localStorage.setItem(\"token\",resp.token)\n            setUser({...resp, username})\n            return  \n        }\n        return resp.error\n    }\n    const logout = ()=>{\n        window.localStorage.clear()\n        setUser()\n        window.open('/', '_self')\n    }\n\n    return [user, signup, login, logout]\n}\nexport default useAuth","import { useEffect, useState } from \"react\"\nimport JoblyApi from \"../api\"\n\nconst useFetchCompanies = () => {\n    const [query, setQuery] = useState(\"\")\n    const [isLoading,setIsLoading] = useState(true)\n    const [companies, setCompanies] = useState()\n\n    useEffect(()=>{\n        async function load(){\n            const resp = await JoblyApi.getCompanies(query)\n            setCompanies(resp)\n            setIsLoading(false)\n            return resp\n        }\n        load()\n    },[query])\n\n    const search = (data)=>{\n        setIsLoading(true)\n        setQuery(data)\n    }\n    return [companies, isLoading, search]\n}\n\nconst useFetchCompany = (handle) => {\n    const [company, setCompany] = useState()\n    useEffect(()=>{\n        async function load(){\n            const resp = await JoblyApi.getCompany(handle)\n            setCompany(resp)\n            return resp\n        }\n        load()\n    },[handle])\n    return [company]\n}\n\nconst useFetchJobs = () => {\n    const [jobs, setJobs] = useState()\n    useEffect(()=>{\n        async function load(){\n            const resp = await JoblyApi.getJobs()\n            setJobs(resp)\n            return resp\n        }\n        if (!jobs) load()\n    },[jobs])\n    return [jobs, setJobs]\n}\nconst useGetUserProfile = (username) => {\n    const [profile, setProfile] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(()=>{\n        setIsLoading(true)\n        async function load(){\n            const res = await JoblyApi.getProfile(username)\n            setProfile(res.user)\n            setIsLoading(false)\n            return res\n            }\n        if (username) load()\n        setIsLoading(false)\n    },[username,isLoading])\n\n    const updateProfile = async (data) => {\n        const resp = await JoblyApi.patchProfile(username,data)\n        setProfile(resp.user)\n        return resp\n    }\n    const authProfile = async (password) => {\n        const resp = await JoblyApi.Login({username,password})\n        return resp.token? true: false\n    }\n\n    const Apply = async (jobID) => {\n        const resp = await JoblyApi.apply(username,jobID)\n        setIsLoading(true)\n        return resp\n        \n    }\n\n    return [[profile,setProfile], isLoading, authProfile, updateProfile, Apply]\n}\n\nexport {useFetchCompanies, useFetchJobs, useFetchCompany, useGetUserProfile}","import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import { useContext } from \"react\";\nimport {\n  Navbar,\n  Nav as N,\n\n  // Form,\n  // FormControl,\n  // Button\n} from \"react-bootstrap\"\nimport {\n  Link\n} from \"react-router-dom\"\nimport UserContext from \"./context/UserContext\";\n\nfunction Nav({logout}) {\n\n  const {user, isLoading} = useContext(UserContext)\n\n  return (\n    <Navbar bg=\"light\" expand=\"md\">\n      <Navbar.Brand as={Link} to=\"/\">Jobify</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <N className=\"ml-auto\">\n          \n          {user && !isLoading?\n          <>\n          <N.Link as={Link} to=\"/companies\">Companies</N.Link>\n          <N.Link as={Link} to=\"/jobs\">Jobs</N.Link>\n          <N.Link as={Link} to=\"/profile\">Profile</N.Link>\n          <N.Link onClick={logout} >Logout</N.Link>\n\n          </>\n          :\n          <>\n          <N.Link as={Link} to=\"/login\">Login</N.Link>\n          {/* <N.Link onClick={logout} >Logout</N.Link> */}\n          <N.Link as={Link} to=\"/signup\">Signup</N.Link>\n          </>\n          }\n          \n        </N>\n        {/* <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form> */}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Nav;\n\n","import React, { useEffect } from 'react'\nimport {v4 as uuid} from \"uuid\"\nimport {Alert} from \"react-bootstrap\"\n \nconst AlertContainer = ({alerts, setAlerts}) => {\n\n  useEffect(() => {\n    const timer=setTimeout(() => {\n      const oneLess = alerts.slice(1)\n      setAlerts(oneLess)\n    }, 5000);\n    // Clear timeout if the component is unmounted\n    return () => clearTimeout(timer);\n  },[alerts, setAlerts]);\n\n  return (\n    <div>\n    {alerts.map((a)=>\n        <Alert \n          key={uuid()}\n          variant={a.variant}\n        >{a.msg}</Alert>)}\n    </div>\n    \n  )\n}\n \nexport default AlertContainer","import React from \"react\";\n\nconst AlertContext = React.createContext();\n\nexport default AlertContext;","import React, {useState} from 'react'\nimport querystring from \"querystring\"\n\nimport { \n    Button,\n    Form,\n    FormGroup,\n    FormControl,\n    InputGroup,\n    Col\n } from 'react-bootstrap'\n \nconst SearchForm = ({search}) => {\n    const [formData, setFormData] = useState(\n        {\n            name:\"\"\n        });\n\n    const handleSubmit = async (evt)=> {\n        evt.preventDefault();\n        formData.name !==\"\" ?\n            search(`?${querystring.stringify(formData)}`)\n            :search(\"\")\n      };\n\n    const handleChange = evt => {\n        const {name,value} = evt.target;\n        setFormData({\n            ...formData,\n            [name]:value,\n        });\n    };\n  return (\n    <Form onSubmit={handleSubmit}>\n        <Col>\n        <FormGroup> \n            <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"...\"\n                aria-label=\"Search companies\"\n                aria-describedby=\"basic-addon2\"\n                name=\"name\"\n                value={formData.search}\n                onChange={handleChange}\n                />\n                <InputGroup.Append>\n                    <Button onClick={handleSubmit} variant=\"outline-secondary\" >\n                        Search\n                    </Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </FormGroup>\n        </Col>\n    </Form>\n  )\n}\n \nexport default SearchForm","import React from 'react'\nimport {Spinner} from 'react-bootstrap'\n \nconst LoadingSpinner = () => {\n  return (\n    <Spinner animation=\"border\" role=\"status\" className=\"my-5\">\n        <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  )\n}\n \nexport default LoadingSpinner","import React from 'react'\nimport {v4 as uuid} from \"uuid\"\nimport { ListGroup, Card, Badge, Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport { useFetchCompanies } from \"../hooks/useFetch\"\n\nimport SearchForm from \"../forms/SearchForm\"\nimport LoadingSpinner from './Spinner'\n\nconst Companies = () => {\n  const [companies,loading, search] = useFetchCompanies()\n  \n  return (\n    <>\n    <div \n      col={8}\n      className=\"mx-auto my-4\"\n    >\n      <h3>Companies</h3>\n      <SearchForm search={(q)=>search(q)} />\n    </div>\n    {loading && <LoadingSpinner />}\n    {companies &&\n    (<ListGroup>\n      {companies.map(c=>(\n        <ListGroup.Item  key={uuid()} as={Link} to={`/companies/${c.handle}`}>\n          <Card >\n            <Card.Body> \n              <Card.Title  className=\"text-left\">\n                {c.name}<Badge as={Image} src={c.logoUrl}/>\n              </Card.Title>\n              <Card.Text>\n                {c.description}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>)}\n    {!loading && companies.length ===0 &&\n    <h3>No companies were found for your search</h3>\n    }\n    </>\n  )\n}\n\nexport default Companies","import React, { useContext } from 'react'\nimport {v4 as uuid} from \"uuid\"\nimport { Button, Card, Col, Row,} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport UserContext from '../context/UserContext'\nimport AlertContext from '../context/AlertContext'\n\n \nconst Job = ({id, title, companyHandle, companyName, salary, equity, withApplyButton=false }) => {\n  \n  const {apply, profile} = useContext(UserContext)\n  const {alerts,setAlerts} = useContext(AlertContext)\n\n\n  const handleApplication = async()=>{\n    try {\n      console.log(id)\n      await apply(id)\n\n      setAlerts([...alerts,{variant:\"success\", msg:companyName?`Applied to ${title} at ${companyName}.`:`Applied to ${title} Job.`}])\n    } catch (error) {\n      \n      setAlerts([error.map(e=>{\n        if (e.includes(\"No job\")) e=\"There was a problem with applying to that job. Please try again later.\"\n        return {variant:\"danger\",msg:e}\n      }),...alerts ])\n    }\n  }\n\n  return (\n    <Card >\n      <Card.Body> \n        {console.log(withApplyButton)}\n        <Card.Title className=\"text-left\">\n          {title}\n        </Card.Title>\n        <Card.Subtitle className=\"text-left\">\n          {companyHandle? <Link to={`/companies/${companyHandle}`}>{companyName}</Link> : companyName}\n        </Card.Subtitle>\n          <Row className=\"p-2 row card-text\">\n          <Col>\n            <Row>Salary: {salary? salary:\"No Salary\"}</Row>\n            <Row>Equity: {equity ? equity: \"0\"}</Row>\n          </Col>\n          <Col md={5} >\n            {withApplyButton &&\n            (profile.applications.includes(id)?\n            <Button \n            size=\"lg\" \n            className=\"p-2 mt-2\" \n            variant=\"secondary\"\n            block\n            disabled\n          >\n            Applied!\n          </Button>\n            :\n            <Button \n              size=\"lg\" \n              className=\"p-2 mt-2\" \n              block\n              onClick={handleApplication}\n            >\n              Apply\n            </Button>)\n            }\n          </Col>\n          </Row>\n      </Card.Body>\n    </Card> )      \n}\n \nexport default Job","import React, {useContext} from 'react'\nimport {v4 as uuid} from \"uuid\"\nimport {\n  Badge, \n  Card, \n  Col, \n  Image,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  \n} from 'react-bootstrap' \nimport { useParams } from 'react-router'\nimport { useFetchCompany } from \"../hooks/useFetch\"\nimport Job from './Job'\nimport LoadingSpinner from './Spinner'\n\nimport UserContext from \"../context/UserContext\"\n\nconst Company = () => {\n\n    const { handle } = useParams()\n\n    const [ company ] = useFetchCompany(handle)\n    const { profile} = useContext(UserContext)\n\n\n  return (\n    <>\n    {company && handle && profile?\n    (<Card >\n\n      <Card.Body> \n        <Row>\n          <Col xs={10}>\n          <Card.Title  className=\"text-left\">\n            {company.name}<Badge as={Image} src={company.logoUrl}/>\n          </Card.Title>\n          <Card.Text  className=\"text-left\">\n            {company.description}\n          </Card.Text>\n          </Col>\n          <Col>\n            <Image src={company.logoUrl} />\n          </Col>\n        </Row>\n        <ListGroup>\n          {company.jobs.map(({companyHandle, ...items})=>(\n            <ListGroupItem key={uuid()}>\n              {console.log(items)}\n              <Job withApplyButton {...items}/>\n            </ListGroupItem>\n          ))}\n      </ListGroup>\n      </Card.Body>\n    </Card>)\n    :\n    <LoadingSpinner />\n   }\n  </>\n  )\n}\n\n\nexport default Company","import React, { useContext } from 'react'\nimport { ListGroup} from 'react-bootstrap'\nimport {v4 as uuid} from \"uuid\"\nimport UserContext from '../context/UserContext'\nimport { useFetchJobs } from '../hooks/useFetch'\nimport Job from './Job'\nimport LoadingSpinner from './Spinner'\n \nconst JobList = (applicationPossible = false) => {\n  const {profile} = useContext(UserContext)\n  const [jobs, resetJobs] = useFetchJobs()\n \n  return jobs && profile?\n    <ListGroup m={8} l={6}> \n        {jobs.map(job => (\n        <ListGroup.Item key={uuid()} className=\"\"> \n          <Job \n            withApplyButton={applicationPossible}\n            reload={resetJobs} \n            {...job}\n          />\n        </ ListGroup.Item>\n          ))}\n    </ListGroup>\n    : \n    <LoadingSpinner />\n}\n \nexport default JobList","import React, {useContext, useEffect, useState} from 'react'\nimport {v4 as uuid} from \"uuid\"\n\nimport { \n    Button,\n    Form,\n    Card,\n    Col,\n    Row,\n } from 'react-bootstrap'\nimport LoadingSpinner from '../components/Spinner'\nimport UserContext from '../context/UserContext'\nimport AlertContext from '../context/AlertContext'\n \nconst ProfileForm = () => {\n\n    const {user,profile, authProfile, isLoading, updateProfile, setProfile}= useContext(UserContext)    \n    const [formData, setFormData] = useState(profile);\n    const [dirtyForm, setDirtyForm] = useState(false);\n\n    const {alerts, setAlerts} = useContext(AlertContext)\n    \n    useEffect(()=>{\n        let email, firstName, lastName\n        if (profile) {\n            email = profile.email\n            firstName = profile.firstName\n            lastName = profile.lastName} \n        setFormData({email, firstName, lastName, password:\"\"})\n    },[profile])\n\n\n    const handleSubmit = async (evt)=> {\n        evt.preventDefault();\n        try {\n            if(!formData.password) throw Array(\"Password required to confirm changes!\")\n            if (await authProfile(formData.password)){\n                await updateProfile(formData)\n                setFormData({...formData,password:\"\"})\n            } \n            setAlerts([...alerts,{variant:\"success\", msg:\"Profile updated!\"}])\n        } catch (error) {\n            console.log(\"handle\",error)\n            setFormData({...formData, password:\"\"})\n            setAlerts([...alerts,{variant:\"danger\", msg:error}])\n        }\n        \n    };\n\n    const handleChange = evt => {\n        const {name,value} = evt.target;\n        setFormData({\n            ...formData,\n            [name]:value,\n        });\n\n        (profile.email ===formData.email &&\n            profile.firstName === formData.firstName &&\n            profile.lastName === formData.lastName)? setDirtyForm(true) : setDirtyForm(false)\n    };\n    const resetForm = ()=>{\n        const {email, firstName, lastName } = profile\n        setFormData({\n            email,\n            firstName,\n            lastName,\n            password:\"\",\n        })\n        setProfile({...profile})\n    }\n    return(\n        <>\n    {!isLoading && profile?\n    <Col xs={8} className=\"m-auto\">\n    <Card className=\"p-3 my-5\">\n        <h4>{profile.username}'s profile</h4>\n    <Form onSubmit={handleSubmit} className=\"my-4\">\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control \n                required\n                type=\"email\" \n                placeholder=\"Enter email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicUsername\">\n            <Form.Control \n                disabled\n                type=\"text\" \n                placeholder={user.username}\n                name=\"username\"\n                onChange={handleChange}\n                />\n        </Form.Group>\n        <Form.Group >\n            <Row>\n                <Col>\n                    <Form.Control \n                        required\n                        type=\"text\" \n                        placeholder=\"First Name\"\n                        name=\"firstName\"\n                        value={formData.firstName}\n                        onChange={handleChange}\n                    />\n                </Col>\n                <Col>\n                    <Form.Control \n                        required\n                        type=\"text\" \n                        placeholder=\"Last Name\"\n                        name=\"lastName\"\n                        value={formData.lastName}\n                        onChange={handleChange}\n                     />\n                </Col>\n            </Row>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n            <Form.Control \n                \n                type=\"password\" \n                placeholder=\"Password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n            />\n            <Form.Text className=\"text-muted text-left\">\n            Confirm any changes with your password.\n            </Form.Text>\n        </Form.Group>\n        <Row>\n            <Col xs={8}>\n                {dirtyForm?\n                <Button \n                    variant=\"primary\" \n                    block \n                    type=\"submit\" \n                    >\n                    Edit Profile\n                </Button> :\n                <Button \n                variant=\"primary\" \n                disabled\n                block\n                type=\"submit\" \n                >\n                Edit Profile\n            </Button>}\n            </Col>\n            <Col xs={4}>\n                <Button \n                    variant=\"danger\" \n                    block \n                    onClick={resetForm}\n                    >\n                    Reset\n                </Button>\n            </Col>\n        </Row>\n    </Form>\n    </Card>\n    </Col>\n    :\n    <LoadingSpinner />}\n    </>\n    )\n}\n \nexport default ProfileForm","import React from 'react'\nimport { Route, Link, Redirect, Switch} from \"react-router-dom\"\nimport { Jumbotron } from \"react-bootstrap\"\n\nimport Companies from \"../components/Companies\"\nimport Company from \"../components/Company\"\nimport JobList from \"../components/Joblist\"\n\nimport ProfileForm from \"../forms/ProfileForm\"\n\n \nconst LoggedInRoutes = ({username}) => {\n  \n  return (\n      <Switch >\n    <Route exact path=\"/\">\n    <Jumbotron>\n      <h1>Hello, {username}</h1>\n        <p>\n          Apply for jobs! Make money\n        </p>\n          <Link className=\"btn btn-primary btn-lg mx-2\" to=\"/companies\"> Companies</Link>\n          <Link className=\"btn btn-primary btn-lg mx-2\" to=\"/jobs\"> Jobs </Link>\n    </Jumbotron>\n    </Route>\n    <Route exact path=\"/companies/:handle\" component={Company} />\n\n    <Route exact path=\"/companies\" component={Companies} />\n\n    <Route exact path=\"/jobs\" component={JobList} />\n\n    <Route exact path=\"/profile\">\n      <ProfileForm />\n    </Route>\n    <Redirect to=\"/\" />\n    </Switch>\n  )\n}\n \nexport default LoggedInRoutes","import React, {useContext, useState} from 'react'\nimport {v4 as uuid} from \"uuid\"\nimport { \n    Button,\n    Form,\n    Card,\n    Col\n} from 'react-bootstrap'\nimport { useHistory } from 'react-router';\nimport AlertContext from '../context/AlertContext';\n \nconst LoginForm = ({login}) => {\n    const history = useHistory()\n    const {alerts,setAlerts} = useContext(AlertContext)\n    \n    const [formData, setFormData] = useState(\n        {\n            username:\"\",\n            password:\"\"\n        });\n\n    const handleSubmit = async (evt)=> {\n        evt.preventDefault();\n        try {\n            await login(formData)\n            setAlerts([...alerts,{variant:\"success\",msg:\"You have successfully logged in!\"}])\n            history.push(\"/\")\n        } catch (error) {\n            setFormData({\n                username:\"\",\n                password:\"\"\n            })\n            setAlerts(error.map(e=>[...error].push({variant:\"danger\",msg:e})) )\n        }\n              };\n\n    const handleChange = evt => {\n        const {name,value} = evt.target;\n        setFormData({\n            ...formData,\n            [name]:value,\n        });\n    };\n  return (\n\n    <Col xs={8} className=\"m-auto\">\n    <Card className=\"p-3 my-5\">\n        <h4>Login to your Jobify account:</h4>\n    <Form onSubmit={handleSubmit} className=\"my-3\">\n        <Form.Group controlId=\"formBasicUsername\">\n            <Form.Control \n                type=\"text\" \n                placeholder=\"Enter username\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n                />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n            <Form.Control \n                type=\"password\" \n                placeholder=\"Password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n            />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n            Login\n        </Button>\n    </Form>\n    </Card>\n    </Col>\n  )\n}\n \nexport default LoginForm","import React, {useState} from 'react'\n\nimport { \n    Button,\n    Form,\n    Card,\n    Col,\n    Row,\n\n } from 'react-bootstrap'\n \nconst SignupForm = ({signup}) => {\n    const initialState = {\n        username:\"\",\n        firstName:\"\",\n        lastName:\"\",\n        email:\"\",\n        password:\"\"\n    }\n    const [formData, setFormData] = useState(initialState);\n\n    const handleSubmit = async (evt)=> {\n        evt.preventDefault();\n        signup(formData)\n      };\n\n    const handleChange = evt => {\n        const {name,value} = evt.target;\n        setFormData({\n            ...formData,\n            [name]:value,\n        });\n    };\n  return (\n    \n    <Col xs={8} className=\"m-auto\">\n    <Card className=\"p-3 my-5\">\n        <h4>Sign up for Jobify!</h4>\n    <Form onSubmit={handleSubmit} className=\"my-4\">\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control \n                required\n                type=\"email\" \n                placeholder=\"Enter email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                />\n            <Form.Text className=\"text-muted text-left\">\n            We'll never share your email with anyone else.\n            </Form.Text>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicUsername\">\n            <Form.Control \n                required\n                type=\"text\" \n                placeholder=\"Enter username\"\n                name=\"username\"\n                value={formData.username}\n                onChange={handleChange}\n                />\n            <Form.Text className=\"text-muted text-left\">\n            You will log in with this.\n            </Form.Text>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n            <Form.Control \n                required\n                type=\"password\" \n                placeholder=\"Password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n            />\n            <Form.Text className=\"text-muted text-left\">\n            You should choose a good password.\n            </Form.Text>\n        </Form.Group>\n        <Form.Group >\n            <Row>\n                <Col>\n                    <Form.Control \n                        required\n                        type=\"text\" \n                        placeholder=\"First Name\"\n                        name=\"firstName\"\n                        value={formData.firstName}\n                        onChange={handleChange}\n                    />\n                </Col>\n                <Col>\n                    <Form.Control \n                        required\n                        type=\"text\" \n                        placeholder=\"Last Name\"\n                        name=\"lastName\"\n                        value={formData.lastName}\n                        onChange={handleChange}\n                     />\n                </Col>\n            </Row>\n            <Form.Text className=\"text-muted text-left\">\n            We need your name so you can apply to jobs!.\n            </Form.Text>\n        </Form.Group>\n        <Row>\n            <Col xs={9}>\n                <Button variant=\"primary\" block type=\"submit\" >\n                    Signup\n                </Button>\n            </Col>\n            <Col xs={3}>\n                <Button variant=\"danger\" block onClick={()=>setFormData(initialState)}>\n                    Reset\n                </Button>\n            </Col>\n        </Row>\n    </Form>\n    </Card>\n    </Col>\n  )\n}\n \nexport default SignupForm","import React, { useContext } from 'react'\nimport { Route, Link, Redirect, Switch } from \"react-router-dom\"\nimport { Jumbotron } from \"react-bootstrap\"\n\nimport LoginForm from \"../forms/LoginForm\"\nimport SignupForm from \"../forms/SignupForm\"\nimport UserContext from '../context/UserContext'\n \nconst AnonRoutes = () => {\n\n  const {login, signup } = useContext(UserContext)\n\n  return (\n      <Switch>\n    <Route exact path=\"/\">\n      <Jumbotron>\n          <h1>Welcome!</h1>\n        <p>\n          Sign up or login to apply for jobs!\n        </p>\n          <Link className=\"btn btn-primary btn-lg mx-2\" to=\"/login\"> Login </Link>\n          <Link className=\"btn btn-primary btn-lg mx-2\" to=\"/signup\"> Signup </Link>\n      </Jumbotron>\n    </Route>\n    <Route exact path=\"/login\">\n    <LoginForm login={(data)=>login(data)}/>\n   </Route>\n   <Route exact path=\"/signup\">\n     <SignupForm signup={(data)=>signup(data)}/>\n   </Route>\n   <Redirect to=\"/\"/>\n    </ Switch>\n  )\n}\n \nexport default AnonRoutes","import React, {useContext} from \"react\"\n\n\nimport AlertContainer from \"../components/AlertContainer\"\nimport AlertContext from \"../context/AlertContext\"\nimport LoggedInRoutes from \"./LoggedInRoutes\";\nimport AnonRoutes from \"./AnonRoutes\";\n\n\n\nfunction Routes({user}) {\n  const {alerts, setAlerts} = useContext(AlertContext)\n\n  \n  return (\n      <div className=\"Content-Container\">\n        {/* <Pagination>\n      <Pagination.Prev onClick={history.goBack}/>\n      <Pagination.Next  onClick={history.goForward}/>\n        </Pagination> */}\n        <AlertContainer alerts={[...alerts]} setAlerts={setAlerts} />\n          {user ?\n          <LoggedInRoutes username={user.username}/>\n          :\n          <AnonRoutes />}\n      </div>)\n}\nexport default Routes;\n","import { BrowserRouter } from 'react-router-dom';\nimport './styling/App.css';\nimport useAuth from './hooks/useAuth';\nimport {useGetUserProfile} from \"./hooks/useFetch\"\n\nimport Nav from './Nav';\nimport Routes from './routes/Routes';\nimport UserContext from './context/UserContext';\nimport { useState } from 'react';\nimport AlertContext from './context/AlertContext';\n\nfunction App() {\n  const [user, signup, login, logout] = useAuth()\n  let [[profile, setProfile], isLoading, authProfile, updateProfile, apply] = useGetUserProfile(user?user.username:undefined)\n  const [alerts, setAlerts] = useState([])\n\n  return !isLoading &&(\n    <div className=\"App\">\n      <UserContext.Provider \n        value={{user, signup, login, profile, setProfile, isLoading, authProfile, updateProfile, apply}}>\n        {console.log(\"USER:\",Boolean(user),\"Profile:\",profile, \"Loading:\",isLoading)}\n        <AlertContext.Provider value={{alerts,setAlerts}}>\n          <BrowserRouter>\n            <>\n            <Nav logout={logout}/>\n            <Routes user={user} />\n            </>\n          </BrowserRouter>\n        </AlertContext.Provider>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}